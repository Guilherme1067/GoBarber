[{"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\index.tsx":"1","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\App.tsx":"2","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\styles\\global.ts":"3","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\pages\\SignIn\\index.tsx":"4","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\pages\\SignIn\\styles.ts":"5","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Input\\index.tsx":"6","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Button\\index.tsx":"7","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Input\\styles.ts":"8","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Button\\styles.ts":"9","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\pages\\SignUp\\index.tsx":"10","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\pages\\SignUp\\styles.ts":"11","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\utils\\getValidationsErrors.ts":"12","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Tooltip\\index.tsx":"13","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Tooltip\\styles.ts":"14","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\services\\api.ts":"15","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\ToastContainer\\index.tsx":"16","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\ToastContainer\\styles.ts":"17","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\hooks\\index.tsx":"18","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\hooks\\auth.tsx":"19","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\hooks\\toast.tsx":"20","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx":"21","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts":"22","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\routes\\index.tsx":"23","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\routes\\Route.tsx":"24","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\pages\\Dashboard\\index.tsx":"25"},{"size":198,"mtime":1612013569469,"results":"26","hashOfConfig":"27"},{"size":355,"mtime":1615431827432,"results":"28","hashOfConfig":"27"},{"size":481,"mtime":1612014572238,"results":"29","hashOfConfig":"27"},{"size":2583,"mtime":1615433631034,"results":"30","hashOfConfig":"27"},{"size":1481,"mtime":1615432915387,"results":"31","hashOfConfig":"27"},{"size":1606,"mtime":1612137640004,"results":"32","hashOfConfig":"27"},{"size":314,"mtime":1612076481921,"results":"33","hashOfConfig":"27"},{"size":1103,"mtime":1612138935916,"results":"34","hashOfConfig":"27"},{"size":381,"mtime":1613592631448,"results":"35","hashOfConfig":"27"},{"size":1981,"mtime":1615433092150,"results":"36","hashOfConfig":"27"},{"size":1481,"mtime":1615460988259,"results":"37","hashOfConfig":"27"},{"size":337,"mtime":1612128730977,"results":"38","hashOfConfig":"27"},{"size":354,"mtime":1612137654957,"results":"39","hashOfConfig":"27"},{"size":742,"mtime":1612139254666,"results":"40","hashOfConfig":"27"},{"size":116,"mtime":1612352308625,"results":"41","hashOfConfig":"27"},{"size":781,"mtime":1615431073000,"results":"42","hashOfConfig":"27"},{"size":162,"mtime":1615345312947,"results":"43","hashOfConfig":"27"},{"size":272,"mtime":1615318869021,"results":"44","hashOfConfig":"27"},{"size":1723,"mtime":1615318505622,"results":"45","hashOfConfig":"27"},{"size":1447,"mtime":1615344491205,"results":"46","hashOfConfig":"27"},{"size":1269,"mtime":1615430853196,"results":"47","hashOfConfig":"27"},{"size":1230,"mtime":1615430932392,"results":"48","hashOfConfig":"27"},{"size":473,"mtime":1615462269822,"results":"49","hashOfConfig":"27"},{"size":802,"mtime":1615463617362,"results":"50","hashOfConfig":"27"},{"size":109,"mtime":1615461027656,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"24vjwq",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\index.tsx",[],["108","109","110","111","112"],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\App.tsx",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\styles\\global.ts",["113"],"import { create } from 'domain';\nimport { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  *{\n    margin:0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  body{\n    background:#312E38;\n    color:#FFF;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body,input,button {\n    font-family: 'Roboto Slab', serif;\n    font-size: 16px;\n  }\n\n  h1,h2,h3,h4,h5,h6,strong{\n    font-weight: 500;\n  }\n\n  button{\n    cursor: pointer;\n  }\n`;\n","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\pages\\SignIn\\index.tsx",["114"],"import React, { useRef, useCallback, useContext } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationsErrors';\nimport logoImg from '../../assets/logo.svg';\nimport { Container, Content, AnimationContainer, Background } from './styles';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\n\ninterface SignInFormatData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormatData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Dígite um e-mail válido'),\n          password: Yup.string().required('Senha Obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({ email: data.email, password: data.password });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n        addToast({\n          type: 'error',\n          title: 'Erro na autenticação',\n          description: 'Ocorreu um erro ao fazer login, cheque as credencias.',\n        });\n      }\n    },\n    [signIn, addToast],\n  );\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu Logon</h1>\n\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\"> Entrar</Button>\n\n            <a href=\"forgot\">Esqueci minha senha</a>\n          </Form>\n\n          <Link to=\"/signup\">\n            <FiLogIn />\n            Criar conta\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Input\\index.tsx",["115","116"],"import React, {\n  Component,\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\nimport Tooltip from '../Tooltip';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon: React.ComponentType<IconBaseProps>;\n}\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error} isFocused={isFocused} isFilled={isFilled}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />{' '}\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Button\\index.tsx",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\pages\\SignUp\\index.tsx",["117"],"import React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiUser, FiLock } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport { Link } from 'react-router-dom';\nimport { Container, Content, AnimationContainer, Background } from './styles';\nimport Button from '../../components/Button';\nimport logoImg from '../../assets/logo.svg';\nimport Input from '../../components/Input';\nimport getValidationErrors from '../../utils/getValidationsErrors';\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data: object) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Dígite um e-mail válido'),\n        password: Yup.string().min(6, 'Mínimo 6 dígitos'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      const errors = getValidationErrors(err);\n      formRef.current?.setErrors(errors);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu Cadastro</h1>\n\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Cadastrar</Button>\n\n            <Link to=\"/\">Voltar para logon</Link>\n          </Form>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\utils\\getValidationsErrors.ts",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Tooltip\\index.tsx",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\Tooltip\\styles.ts",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\services\\api.ts",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\hooks\\index.tsx",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\hooks\\auth.tsx",["118","119"],"import React, { createContext, useCallback, useState, useContext } from 'react';\nimport { tokenToString } from 'typescript';\nimport api from '../services/api';\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\ninterface AuthContextData {\n  user: object;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@Gobarber:token');\n    const user = localStorage.getItem('@Gobarber:user');\n\n    if (token && user) {\n      return { token, user: JSON.parse(user) };\n    }\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    });\n    console.log(response);\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@Gobarber:token', token);\n    localStorage.setItem('@Gobarber:user', JSON.stringify(user));\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n","C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\hooks\\toast.tsx",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\routes\\index.tsx",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\routes\\Route.tsx",[],"C:\\Users\\Guilherme\\Desktop\\gobarber-frontend\\06-gobarber-web\\src\\pages\\Dashboard\\index.tsx",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":1,"column":38,"nodeType":"132","messageId":"133","endLine":1,"endColumn":48},{"ruleId":"130","severity":1,"message":"135","line":2,"column":3,"nodeType":"132","messageId":"133","endLine":2,"endColumn":12},{"ruleId":"130","severity":1,"message":"136","line":14,"column":8,"nodeType":"132","messageId":"133","endLine":14,"endColumn":15},{"ruleId":"130","severity":1,"message":"137","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":21},{"ruleId":"130","severity":1,"message":"138","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":39,"column":5,"nodeType":"141","messageId":"142","endLine":39,"endColumn":16},"lines-around-directive",["143"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'create' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Component' is defined but never used.","'Tooltip' is defined but never used.","'FiArrowLeft' is defined but never used.","'tokenToString' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]